#!/bin/sh
# the next line restarts using tclsh \
exec tclsh "$0" "$@"
# input: stats file generated by wd
set MaxLen 10000

set ifile   [lindex $argv 0]
set auxfile [lindex $argv 1]
set w_col [lindex $argv 2];# collumn with the word
set l_col [lindex $argv 3];# collumn with the word length (optional)
set ofile "$ifile.max"

set lastLen 0
set lastSeq ""
set N 0.0;# number of words to skip

if { $auxfile=="-" } { set auxfile "" }
if { $l_col=="" } {
    # sort the file
    exec bash -c "cut -d\\  -f $w_col $ifile | perl -e 'while (<STDIN>) { chop;\$l=length(\$_); print \"\$_ \$l\n\";}' | sort -k 2 -n -t\\  -r > $ifile.tmp"
    set l_col 2
    set w_col 1
    set ifile "$ifile.tmp"
    puts "$ifile"
}

set fd  [open $ifile r]

if { $N>0 } {
	set fdw [open $ofile a+]
	set lastSeq [exec tail -n 1 $ofile]
	puts $lastSeq
} else {
	set fdw [open $ofile w+]
}
set w_col [expr $w_col-1]
set l_col [expr $l_col-1]

fconfigure $fdw -blocking 1 -buffering line
set cn 1.0
while { ![eof $fd] } {
    set l [gets $fd]
    set curSeq [lindex $l $w_col]
    set curlen [lindex $l $l_col]
    if { $cn>$N && $curlen<$MaxLen } {
	# curlen<lastLen
	# substr?
	if { [string first $curSeq $lastSeq]>0 } {
	    # do nothing
	    puts -nonewline "."
	} else {
	    set res 0
	    set n 0
#	    puts stderr "grep1:grep -c -m 1 $curSeq $auxfile"
	    catch { set n [exec grep -c -m 1 $curSeq $auxfile] } res
#	    puts stderr "grep1:$n"
	    #puts "grep -c -m 1 $curSeq $auxfile"
	    if { $n>=1 || $auxfile=="" } {
		set n 0
		set res 0
		catch { set n [exec grep -c -m 1 $curSeq $ofile] } res
		#		puts stderr -nonewline $res
		if { $n<1 } {
		    puts $fdw $l;flush $fdw
		    set lastLen $curlen	    
		    set lastSeq $curSeq
		    puts -nonewline "+"
		} else {
		    puts -nonewline "-"
		}
	    } else {
		puts -nonewline "v"
	    }
	}
    }  else {
	puts $cn
    }
    set cn [expr $cn+1]
    flush stdout
}
close $fd
close $fdw
#exec rm -f $f